#!/system/bin/sh
# shellcheck disable=SC3043,SC2046,SC2086,SC3010
# shellcheck disable=SC1091
TEMPDIR=/data/local/tmp/zcharge

false && {
	if [ -n "$MODDIR" ]; then
		exec 3>&1 1>"$TEMPDIR/zcharge.log" 2>&1
		set -x
	fi
}

if [ -z $MODPATH ]; then
	MODDIR=/data/adb/modules/zcharge
	export MODPATH=$MODDIR
fi

MODBIN=$MODPATH/system/bin

. $MODPATH/modules/arsenal.sh

prn() {
	echo "  > $1"
}

switch_off() {
	echo $off_switch >$charging_switch
}

switch_on() {
	echo $on_switch >$charging_switch
}

for opt in "$@"; do
	case $opt in
	*conf)
		CONF=$opt
		cp -f $CONF /data/adb/zcharge/zcharge.conf
		CONF=/data/adb/zcharge/zcharge.conf
		;;
	esac
done

[ -z $CONF ] && CONF=/data/adb/zcharge/zcharge.conf

on_switch=$(
	sed -n 's/charging_switch = \(.*\)/\1/p' $CONF |
		awk '{print $2}'
)
off_switch=$(
	sed -n 's/charging_switch = \(.*\)/\1/p' $CONF |
		awk '{print $3}'
)
charging_switch=$(
	sed -n \
		"s/charging_switch = \(.*\) $on_switch $off_switch/\1/p" \
		$CONF
)

for opt in "$@"; do
	case $opt in
	-es | --enable-svc)
		if [ -z $(getprop zcharge.service.pid) ]; then
			$MODBIN/zcharge -r
			limiter_service
			sed -i 's/\(enabled = \).*/\11/' $CONF
		else
			prn "zcharge service is already activated"
		fi
		;;
	-ds | --disable-svc)
		sed -i 's/\(enabled = \).*/\10/' $CONF

		if kill -9 $(getprop zcharge.service.pid) \
			2>/dev/null; then
			prn "zcharge service is killed"
		else
			prn "zcharge service is dead"
		fi
		switch_on
		resetprop --delete zcharge.service.pid
		resetprop --delete zcharge.service
		set_wait 0
		;;
	-e | --enable)
		switch_on && prn "Charging enabled"
		;;
	-d | --disable)
		switch_off && prn "Charging disabled"
		;;
	-g | --get)
		cat $CONF
		;;
	-r | --reset)
		capacity=$(cat /sys/class/power_supply/battery/capacity)

		set_wait 0 && prn "zcharge reset" && {
			capacity_limit=$(sed -n 's/capacity_limit = //p' $CONF)
			[ $capacity -lt $capacity_limit ] && switch_on &&
				prn "Charging continue"
		}
		;;
	-h | --help)
		cat <<EOF
    USAGE: zcharge [OPTIONS].. [CONFIG]
    Could be with or without config

    -es | --enable-svc   enable service 
    -ds | --disable-svc  disable service 
    -e  | --enable       enable charging
    -d  | --disable      disable charging
    -g  | --get          show config
    -r  | --reset        reset memory to continue charging without have to wait until capacity drop to recharging_limit
    -h  | --help         help
EOF
		;;
	*conf)
		true
		;;
	*)
		$MODBIN/zcharge -h
		;;
	esac
done

[ -z $1 ] && $MODBIN/zcharge -h
